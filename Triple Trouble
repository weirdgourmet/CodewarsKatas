/*
Write a function

TripleDouble(long num1, long num2)

which takes numbers num1 and num2 and returns 1 if there is a straight triple of a number at any place in num1 and also a straight double of the same number in num2.

If this isn't the case, return 0
Examples

TripleDouble(451999277, 41177722899) == 1 // num1 has straight triple 999s and 
                                          // num2 has straight double 99s

TripleDouble(1222345, 12345) == 0 // num1 has straight triple 2s but num2 has only a single 2

TripleDouble(12345, 12345) == 0

TripleDouble(666789, 12345667) == 1


*/


public class Kata
{
  public static int TripleDouble(long num1, long num2) 
  {
    return ((Long.toString(num1).contains("000")&&Long.toString(num2).contains("00"))||(Long.toString(num1).contains("111")&&Long.toString(num2).contains("11"))||(Long.toString(num1).contains("222")&&Long.toString(num2).contains("22"))||(Long.toString(num1).contains("333")&&Long.toString(num2).contains("33"))||(Long.toString(num1).contains("444")&&Long.toString(num2).contains("44"))||(Long.toString(num1).contains("555")&&Long.toString(num2).contains("55"))||(Long.toString(num1).contains("666")&&Long.toString(num2).contains("66"))||(Long.toString(num1).contains("777")&&Long.toString(num2).contains("77"))||(Long.toString(num1).contains("888")&&Long.toString(num2).contains("88"))||(Long.toString(num1).contains("999")&&Long.toString(num2).contains("99"))) ? 1 : 0;
  }
}
